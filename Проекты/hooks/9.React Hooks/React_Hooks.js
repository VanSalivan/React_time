//? 95. Что такое React Hooks (хуки)
//* - Хуки дают возможность компонентам-функциям работать со состоянием, жизненным циклом и контекстом.
//* - Работаю в версии React не ниже 16.8.0

//? 97. useState()
//* - Добавляет state в функциональный компонент
// const [ параметр, setПараметр ] = useState(стартовое_Значение)
//* - Возвращает массив: текущее значение и функция(setter) для установки значения
//* - Всегда обновляет обьект полностью, а не отдельные поля как setState()

//? 98. useContext()
//* - Получает значение из заданого контекста
// const a = useContext(КомпонентКонтекст);
//* - В useContext() передается именно обьект-контекст, а не Consumer

//? 99.useEffect()
//* -Эффекты создаются и очищаются когда изменяются данные от которым этот эффект зависит
//* - Запускает функцию каждый раз, когда определеленный набор данных изменяется
//* - Схож с функциями жизненных циклов компонента
//* - Вызывается при componentDidMount и componentDidUpdate
//* - Принимает вторым параметром условия обновления для эффекта componentDidUpdate
// useEffect(первый_параметр_функция, [второй-условие в виде массива]) componentDidMount
//* - Если передать вторым агрументом пустой массив [ ] будет работать лишь 
//* - Если вернуть "return" функцию, она будет вызываться для очистки предыдущего эффекта - похоже на componentWillUnmount()

//? 
//* - 
//* - 
//* - 

//? 
//* - 
//* - 
//* - 