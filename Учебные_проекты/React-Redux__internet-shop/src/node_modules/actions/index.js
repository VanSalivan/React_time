// Externals
import {
  FETCH_PHONES_START, FETCH_PHONES_SUCCESS, FETCH_PHONES_FAILURE,
  LOAD_MORE_PHONES_START, LOAD_MORE_PHONES_SUCCESS, LOAD_MORE_PHONES_FAILURE,
  FETCH_PHONE_BY_ID_START, FETCH_PHONE_BY_ID_SUCCESS, FETCH_PHONE_BY_ID_FAILURE
} from 'actionTypes'

import {
  fetchPhones as fetchPhonesApi,
  loadMorePhones as loadMorePhonesApi,
  fetchPhoneById as fetchPhoneByIdApi
} from 'api'

//SELECTOR
import { getRenderedPhonesLength } from 'services/selectors'

export const fetchPhones = () => async dispatch => {
  dispatch({ type: FETCH_PHONES_START })

  try {
    const phones = await fetchPhonesApi()

    dispatch({
      type: FETCH_PHONES_SUCCESS,
      payload: phones
    })

  } catch (err) {

    dispatch({
      type: FETCH_PHONES_FAILURE,
      payload: err,
      error: true
    })
  }
}

export const loadMorePhones = () => async (dispatch, getState) => {
  // getState при вызове вернет текущий state 
  // увидит state.phonesPage.ids.length = например "6"
  // и запишет полученное значение в offset

  // при нажатии на loadMorePhones мы добавим новые элементы
  // и state.phonesPage.ids.length измениться на '12'

  // Получаем количество отредеренных телефонов для offset пагинации
  const offset = getRenderedPhonesLength(getState())

  dispatch({ type: LOAD_MORE_PHONES_START })

  try {
    // Передаем длину отредеренных телефонов для отправки offset на сервер для получения шага* элементов
    const phones = await loadMorePhonesApi({ offset })

    dispatch({
      type: LOAD_MORE_PHONES_SUCCESS,
      payload: phones
    })

  } catch (err) {

    dispatch({
      type: LOAD_MORE_PHONES_FAILURE,
      payload: err,
      error: true
    })
  }
}

export const fetchPhoneById = (id) => async (dispatch) => {
  dispatch({ type: FETCH_PHONE_BY_ID_START })

  try {
    const phone = await fetchPhoneByIdApi(id)
    dispatch({
      type: FETCH_PHONE_BY_ID_SUCCESS,
      payload: phone
    })

  } catch (err) {
    dispatch({
      type: FETCH_PHONE_BY_ID_FAILURE,
      payload: err,
      error: true
    })
  }
}